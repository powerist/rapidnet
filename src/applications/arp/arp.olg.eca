ECA Rule rh1Eca0Ins ACTION_REMOTE_SEND<packet(@Switch, Host, Dst, PktLoad)> :- EVENT_INSERT<linkHst(@Host, Switch, Port)>, arpRequest(@Host, SrcIp, SrcMac, DstIp, DstMac), PktLoad1 := f_empty(), PktLoad2 := f_prepend(DstMac, PktLoad1), PktLoad3 := f_prepend(DstIp, PktLoad2), PktLoad4 := f_prepend(SrcMac, PktLoad3), PktLoad5 := f_prepend(SrcIp, PktLoad4), PktLoad6 := f_prepend(1, PktLoad5), PktLoad := f_prepend(ARP, PktLoad6), Dst := ff:ff:ff:ff:ff.
ECA Rule rh1Eca1Ins ACTION_REMOTE_SEND<packet(@Switch, Host, Dst, PktLoad)> :- EVENT_INSERT<arpRequest(@Host, SrcIp, SrcMac, DstIp, DstMac)>, linkHst(@Host, Switch, Port), PktLoad1 := f_empty(), PktLoad2 := f_prepend(DstMac, PktLoad1), PktLoad3 := f_prepend(DstIp, PktLoad2), PktLoad4 := f_prepend(SrcMac, PktLoad3), PktLoad5 := f_prepend(SrcIp, PktLoad4), PktLoad6 := f_prepend(1, PktLoad5), PktLoad := f_prepend(ARP, PktLoad6), Dst := ff:ff:ff:ff:ff.
ECA Rule rh2_eca ACTION_ADD<arpReply(@Host, SrcIp, SrcMac, DstIp, DstMac)> :- EVENT_RECV<packet(@Host, Switch, Dst, PktLoad)>, linkHst(@Host, Switch, Port), Dst == Host, ARP == f_first(PktLoad), PktLoad1 := f_removeFirst(PktLoad), 2 == f_first(PktLoad1), PktLoad2 := f_removeFirst(PktLoad1), SrcIp := f_first(PktLoad2), PktLoad3 := f_removeFirst(PktLoad2), SrcMac := f_first(PktLoad3), PktLoad4 := f_removeFirst(PktLoad3), DstIp := f_first(PktLoad4), PktLoad5 := f_removeFirst(PktLoad4), DstMac := f_first(PktLoad5).
ECA Rule rc1_eca ACTION_ADD<hostPos(@Controller, SrcHost, Switch, InPort)> :- EVENT_RECV<packetIn(@Controller, Switch, InPort, Pkt)>, ofconnCtl(@Controller, Switch), SrcHost := f_first(Pkt).
ECA Rule rc2_eca ACTION_LOCAL_SEND<arpReqCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)> :- EVENT_RECV<packetIn(@Controller, Switch, InPort, Pkt)>, ofconnCtl(@Controller, Switch), PktLoad1 := f_removeFirst(Pkt), PktLoad2 := f_removeFirst(PktLoad1), ARP == f_first(PktLoad2), PktLoad3 := f_removeFirst(PktLoad2), 1 == f_first(PktLoad3), PktLoad4 := f_removeFirst(PktLoad3), SrcIp := f_first(PktLoad4), PktLoad5 := f_removeFirst(PktLoad4), SrcMac := f_first(PktLoad5), PktLoad6 := f_removeFirst(PktLoad5), DstIp := f_first(PktLoad6), PktLoad7 := f_removeFirst(PktLoad6), DstMac := f_first(PktLoad7).
ECA Rule rc3_eca ACTION_ADD<arpMapping(@Controller, SrcIp, SrcMac)> :- EVENT_RECV<arpReqCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)>.
ECA Rule rc4_eca ACTION_LOCAL_SEND<arpReplyCtl(@Controller, DstIp, Mac, SrcIp, SrcMac)> :- EVENT_RECV<arpReqCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)>, arpMapping(@Controller, DstIp, Mac).
ECA Rule rc6_eca ACTION_REMOTE_SEND<packetOut(@Switch, Controller, Port, Pkt)> :- EVENT_RECV<arpReplyCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)>, ofconnCtl(@Controller, Switch), hostPos(@Controller, SrcIp, Switch, Port), PktLoad1 := f_empty(), PktLoad2 := f_prepend(DstMac, PktLoad1), PktLoad3 := f_prepend(DstIp, PktLoad2), PktLoad4 := f_prepend(SrcMac, PktLoad3), PktLoad5 := f_prepend(SrcIp, PktLoad4), PktLoad6 := f_prepend(2, PktLoad5), PktLoad := f_prepend(ARP, PktLoad6), Pkt1 := f_prepend(DstIp, PktLoad), Pkt := f_prepend(SrcIp, Pkt1).
ECA Rule rs1_eca ACTION_REMOTE_SEND<packetIn(@Controller, Switch, InPort, Pkt)> :- EVENT_RECV<packet(@Switch, Host, Dst, PktLoad)>, ofconnSwc(@Switch, Controller), linkSwc(@Switch, Host, InPort), flowEntry(@Switch, Match, Prio, Actions), Match == ARP, Match == f_first(PktLoad), Prio == 1, Actions == controller, Pkt1 := f_prepend(Dst, PktLoad), Pkt := f_prepend(Host, Pkt1).
ECA Rule rs2_eca ACTION_REMOTE_SEND<packet(@Host, Switch, $1, PktLoad)> :- EVENT_RECV<packetOut(@Switch, Controller, OutPort, Pkt)>, linkSwc(@Switch, Host, Port), $1 := Host, PktLoad1 := f_removeFirst(Pkt), PktLoad := f_removeFirst(PktLoad1).
