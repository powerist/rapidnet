ECA Rule rh1Eca0Ins ACTION_REMOTE_SEND<packet(@Switch, Host, Dst, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)> :- EVENT_INSERT<linkHst(@Host, Switch, Port)>, arpRequest(@Host, SrcIp, SrcMac, DstIp, DstMac), Arptype := 1, Type := ARP, Dst := ff:ff:ff:ff:ff.
ECA Rule rh1Eca1Ins ACTION_REMOTE_SEND<packet(@Switch, Host, Dst, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)> :- EVENT_INSERT<arpRequest(@Host, SrcIp, SrcMac, DstIp, DstMac)>, linkHst(@Host, Switch, Port), Arptype := 1, Type := ARP, Dst := ff:ff:ff:ff:ff.
ECA Rule rh2Local1_eca ACTION_REMOTE_SEND<rh2packetHost(Switch, @Host, Dst, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)> :- EVENT_RECV<packet(@Switch, Host, Dst, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)>.
ECA Rule rh2Local2_eca ACTION_ADD<arpReply(@Host, SrcIp, SrcMac, DstIp, DstMac)> :- EVENT_RECV<rh2packetHost(Switch, @Host, Dst, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)>, linkHst(@Host, Switch, Port), Dst == Host.
ECA Rule rc1_eca ACTION_ADD<hostPos(@Controller, SrcHost, Switch, InPort)> :- EVENT_RECV<packetIn(@Controller, Switch, InPort, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)>, ofconnCtl(@Controller, Switch), portAndSrcMapping(@Controller, InPort, SrcHost).
ECA Rule rc2_eca ACTION_LOCAL_SEND<arpReqCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)> :- EVENT_RECV<packetIn(@Controller, Switch, InPort, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)>, ofconnCtl(@Controller, Switch), Type == ARP, Arptype == 1.
ECA Rule rc3_eca ACTION_ADD<arpMapping(@Controller, SrcIp, SrcMac)> :- EVENT_RECV<arpReqCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)>.
ECA Rule rc4_eca ACTION_LOCAL_SEND<arpReplyCtl(@Controller, DstIp, Mac, SrcIp, SrcMac)> :- EVENT_RECV<arpReqCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)>, arpMapping(@Controller, DstIp, Mac).
ECA Rule rc6_eca ACTION_REMOTE_SEND<packetOut(@Switch, Controller, Port, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)> :- EVENT_RECV<arpReplyCtl(@Controller, SrcIp, SrcMac, DstIp, DstMac)>, ofconnCtl(@Controller, Switch), hostPos(@Controller, SrcIp, Switch, Port), Arptype := 2, Type := ARP.
ECA Rule rs1_eca ACTION_REMOTE_SEND<packetIn(@Controller, Switch, InPort, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)> :- EVENT_RECV<packet(@Switch, Host, Dst, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)>, ofconnSwc(@Switch, Controller), linkSwc(@Switch, Host, InPort), flowEntry(@Switch, Match, Prio, Actions), Type == ARP, Prio == 1, Actions == controller.
ECA Rule rs2_eca ACTION_REMOTE_SEND<packet(@Host, Switch, $1, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)> :- EVENT_RECV<packetOut(@Switch, Controller, OutPort, DstMac, DstIp, SrcMac, SrcIp, Arptype, Type)>, linkSwc(@Switch, Host, Port), $1 := Host.
